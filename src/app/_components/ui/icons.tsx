"use client";

import * as React from "react";

import { cn } from "~/lib/utils";

function IconNextChat({
  className,
  inverted,
  ...props
}: React.ComponentProps<"svg"> & { inverted?: boolean }) {
  const id = React.useId();

  return (
    <svg
      viewBox="0 0 17 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <defs>
        <linearGradient
          id={`gradient-${id}-1`}
          x1="10.6889"
          y1="10.3556"
          x2="13.8445"
          y2="14.2667"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? "white" : "black"} />
          <stop
            offset={1}
            stopColor={inverted ? "white" : "black"}
            stopOpacity={0}
          />
        </linearGradient>
        <linearGradient
          id={`gradient-${id}-2`}
          x1="11.7555"
          y1="4.8"
          x2="11.7376"
          y2="9.50002"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? "white" : "black"} />
          <stop
            offset={1}
            stopColor={inverted ? "white" : "black"}
            stopOpacity={0}
          />
        </linearGradient>
      </defs>
      <path
        d="M1 16L2.58314 11.2506C1.83084 9.74642 1.63835 8.02363 2.04013 6.39052C2.4419 4.75741 3.41171 3.32057 4.776 2.33712C6.1403 1.35367 7.81003 0.887808 9.4864 1.02289C11.1628 1.15798 12.7364 1.8852 13.9256 3.07442C15.1148 4.26363 15.842 5.83723 15.9771 7.5136C16.1122 9.18997 15.6463 10.8597 14.6629 12.224C13.6794 13.5883 12.2426 14.5581 10.6095 14.9599C8.97637 15.3616 7.25358 15.1692 5.74942 14.4169L1 16Z"
        fill={inverted ? "black" : "white"}
        stroke={inverted ? "black" : "white"}
        strokeWidth={2}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <mask
        id="mask0_91_2047"
        style={{ maskType: "alpha" }}
        maskUnits="userSpaceOnUse"
        x={1}
        y={0}
        width={16}
        height={16}
      >
        <circle cx={9} cy={8} r={8} fill={inverted ? "black" : "white"} />
      </mask>
      <g mask="url(#mask0_91_2047)">
        <circle cx={9} cy={8} r={8} fill={inverted ? "black" : "white"} />
        <path
          d="M14.2896 14.0018L7.146 4.8H5.80005V11.1973H6.87681V6.16743L13.4444 14.6529C13.7407 14.4545 14.0231 14.2369 14.2896 14.0018Z"
          fill={`url(#gradient-${id}-1)`}
        />
        <rect
          x="11.2222"
          y="4.8"
          width="1.06667"
          height="6.4"
          fill={`url(#gradient-${id}-2)`}
        />
      </g>
    </svg>
  );
}

function IconOpenAI({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      fill="currentColor"
      viewBox="0 0 24 24"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <title>OpenAI icon</title>
      <path d="M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.4997-2.6067-1.4997Z" />
    </svg>
  );
}

function IconVercel({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      aria-label="Vercel logomark"
      role="img"
      viewBox="0 0 74 64"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path
        d="M37.5896 0.25L74.5396 64.25H0.639648L37.5896 0.25Z"
        fill="currentColor"
      ></path>
    </svg>
  );
}

function IconGitHub({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      role="img"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <title>GitHub</title>
      <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12" />
    </svg>
  );
}

function IconSeparator({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      fill="none"
      shapeRendering="geometricPrecision"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="1"
      viewBox="0 0 24 24"
      aria-hidden="true"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M16.88 3.549L7.12 20.451"></path>
    </svg>
  );
}

function IconArrowDown({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="m205.66 149.66-72 72a8 8 0 0 1-11.32 0l-72-72a8 8 0 0 1 11.32-11.32L120 196.69V40a8 8 0 0 1 16 0v156.69l58.34-58.35a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  );
}

function IconArrowRight({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M9.80584 16.2879C10.172 16.654 10.7655 16.654 11.1317 16.2879L16.7567 10.6629C17.1228 10.2968 17.1228 9.7032 16.7567 9.33709L11.1317 3.71209C10.7655 3.34597 10.172 3.34597 9.80584 3.71209C9.43972 4.0782 9.43972 4.6718 9.80584 5.03791L13.8304 9.0625H3.90625C3.38848 9.0625 2.96875 9.48223 2.96875 10C2.96875 10.5178 3.38848 10.9375 3.90625 10.9375H13.8304L9.80584 14.9621C9.43972 15.3282 9.43972 15.9218 9.80584 16.2879Z"
      />
    </svg>
  );
}

function IconArrowDiagonal({
  className,
  ...props
}: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 20 20"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M7.0553 7.64349H11.5277L6.63693 12.5284C6.52597 12.6394 6.46363 12.7899 6.46363 12.9468C6.46363 13.1037 6.52597 13.2542 6.63693 13.3652C6.74789 13.4761 6.89838 13.5385 7.0553 13.5385C7.21222 13.5385 7.36271 13.4761 7.47367 13.3652L12.3586 8.47434V12.9468C12.3586 13.1031 12.4207 13.2529 12.5312 13.3635C12.6417 13.474 12.7916 13.536 12.9479 13.536C13.1041 13.536 13.254 13.474 13.3645 13.3635C13.475 13.2529 13.5371 13.1031 13.5371 12.9468V7.05423C13.5362 6.97723 13.5202 6.90115 13.49 6.83031C13.4302 6.68633 13.3158 6.57191 13.1718 6.51211C13.1009 6.48192 13.0249 6.46591 12.9479 6.46497H7.0553C6.89902 6.46497 6.74914 6.52706 6.63863 6.63756C6.52812 6.74807 6.46604 6.89795 6.46604 7.05423C6.46604 7.21051 6.52812 7.36039 6.63863 7.4709C6.74914 7.5814 6.89902 7.64349 7.0553 7.64349Z" />
    </svg>
  );
}

function IconLoading({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth="1.5"
      stroke="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99"
      />
    </svg>
  );
}

function IconUser({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M230.92 212c-15.23-26.33-38.7-45.21-66.09-54.16a72 72 0 1 0-73.66 0c-27.39 8.94-50.86 27.82-66.09 54.16a8 8 0 1 0 13.85 8c18.84-32.56 52.14-52 89.07-52s70.23 19.44 89.07 52a8 8 0 1 0 13.85-8ZM72 96a56 56 0 1 1 56 56 56.06 56.06 0 0 1-56-56Z" />
    </svg>
  );
}

function IconPlus({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M224 128a8 8 0 0 1-8 8h-80v80a8 8 0 0 1-16 0v-80H40a8 8 0 0 1 0-16h80V40a8 8 0 0 1 16 0v80h80a8 8 0 0 1 8 8Z" />
    </svg>
  );
}

function IconArrowElbow({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M200 32v144a8 8 0 0 1-8 8H67.31l34.35 34.34a8 8 0 0 1-11.32 11.32l-48-48a8 8 0 0 1 0-11.32l48-48a8 8 0 0 1 11.32 11.32L67.31 168H184V32a8 8 0 0 1 16 0Z" />
    </svg>
  );
}

function IconSpinner({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4 animate-spin", className)}
      {...props}
    >
      <path d="M232 128a104 104 0 0 1-208 0c0-41 23.81-78.36 60.66-95.27a8 8 0 0 1 6.68 14.54C60.15 61.59 40 93.27 40 128a88 88 0 0 0 176 0c0-34.73-20.15-66.41-51.34-80.73a8 8 0 0 1 6.68-14.54C208.19 49.64 232 87 232 128Z" />
    </svg>
  );
}

function IconMessage({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M216 48H40a16 16 0 0 0-16 16v160a15.84 15.84 0 0 0 9.25 14.5A16.05 16.05 0 0 0 40 240a15.89 15.89 0 0 0 10.25-3.78.69.69 0 0 0 .13-.11L82.5 208H216a16 16 0 0 0 16-16V64a16 16 0 0 0-16-16ZM40 224Zm176-32H82.5a16 16 0 0 0-10.3 3.75l-.12.11L40 224V64h176Z" />
    </svg>
  );
}

function IconTrash({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16ZM96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Zm48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Z" />
    </svg>
  );
}

function IconRefresh({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M197.67 186.37a8 8 0 0 1 0 11.29C196.58 198.73 170.82 224 128 224c-37.39 0-64.53-22.4-80-39.85V208a8 8 0 0 1-16 0v-48a8 8 0 0 1 8-8h48a8 8 0 0 1 0 16H55.44C67.76 183.35 93 208 128 208c36 0 58.14-21.46 58.36-21.68a8 8 0 0 1 11.31.05ZM216 40a8 8 0 0 0-8 8v23.85C192.53 54.4 165.39 32 128 32c-42.82 0-68.58 25.27-69.66 26.34a8 8 0 0 0 11.3 11.34C69.86 69.46 92 48 128 48c35 0 60.24 24.65 72.56 40H168a8 8 0 0 0 0 16h48a8 8 0 0 0 8-8V48a8 8 0 0 0-8-8Z" />
    </svg>
  );
}

function IconStop({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M128 24a104 104 0 1 0 104 104A104.11 104.11 0 0 0 128 24Zm0 192a88 88 0 1 1 88-88 88.1 88.1 0 0 1-88 88Zm24-120h-48a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8Zm-8 48h-32v-32h32Z" />
    </svg>
  );
}

function IconSidebar({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16ZM40 56h40v144H40Zm176 144H96V56h120v144Z" />
    </svg>
  );
}

function IconMoon({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M233.54 142.23a8 8 0 0 0-8-2 88.08 88.08 0 0 1-109.8-109.8 8 8 0 0 0-10-10 104.84 104.84 0 0 0-52.91 37A104 104 0 0 0 136 224a103.09 103.09 0 0 0 62.52-20.88 104.84 104.84 0 0 0 37-52.91 8 8 0 0 0-1.98-7.98Zm-44.64 48.11A88 88 0 0 1 65.66 67.11a89 89 0 0 1 31.4-26A106 106 0 0 0 96 56a104.11 104.11 0 0 0 104 104 106 106 0 0 0 14.92-1.06 89 89 0 0 1-26.02 31.4Z" />
    </svg>
  );
}

function IconSun({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M120 40V16a8 8 0 0 1 16 0v24a8 8 0 0 1-16 0Zm72 88a64 64 0 1 1-64-64 64.07 64.07 0 0 1 64 64Zm-16 0a48 48 0 1 0-48 48 48.05 48.05 0 0 0 48-48ZM58.34 69.66a8 8 0 0 0 11.32-11.32l-16-16a8 8 0 0 0-11.32 11.32Zm0 116.68-16 16a8 8 0 0 0 11.32 11.32l16-16a8 8 0 0 0-11.32-11.32ZM192 72a8 8 0 0 0 5.66-2.34l16-16a8 8 0 0 0-11.32-11.32l-16 16A8 8 0 0 0 192 72Zm5.66 114.34a8 8 0 0 0-11.32 11.32l16 16a8 8 0 0 0 11.32-11.32ZM48 128a8 8 0 0 0-8-8H16a8 8 0 0 0 0 16h24a8 8 0 0 0 8-8Zm80 80a8 8 0 0 0-8 8v24a8 8 0 0 0 16 0v-24a8 8 0 0 0-8-8Zm112-88h-24a8 8 0 0 0 0 16h24a8 8 0 0 0 0-16Z" />
    </svg>
  );
}

function IconCopy({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M216 32H88a8 8 0 0 0-8 8v40H40a8 8 0 0 0-8 8v128a8 8 0 0 0 8 8h128a8 8 0 0 0 8-8v-40h40a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8Zm-56 176H48V96h112Zm48-48h-32V88a8 8 0 0 0-8-8H96V48h112Z" />
    </svg>
  );
}

function IconCheck({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="m229.66 77.66-128 128a8 8 0 0 1-11.32 0l-56-56a8 8 0 0 1 11.32-11.32L96 188.69 218.34 66.34a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  );
}

function IconDownload({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M224 152v56a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16v-56a8 8 0 0 1 16 0v56h160v-56a8 8 0 0 1 16 0Zm-101.66 5.66a8 8 0 0 0 11.32 0l40-40a8 8 0 0 0-11.32-11.32L136 132.69V40a8 8 0 0 0-16 0v92.69l-26.34-26.35a8 8 0 0 0-11.32 11.32Z" />
    </svg>
  );
}

function IconClose({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path d="M205.66 194.34a8 8 0 0 1-11.32 11.32L128 139.31l-66.34 66.35a8 8 0 0 1-11.32-11.32L116.69 128 50.34 61.66a8 8 0 0 1 11.32-11.32L128 116.69l66.34-66.35a8 8 0 0 1 11.32 11.32L139.31 128Z" />
    </svg>
  );
}

function IconEdit({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
      />
    </svg>
  );
}

function IconShare({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="m237.66 106.35-80-80A8 8 0 0 0 144 32v40.35c-25.94 2.22-54.59 14.92-78.16 34.91-28.38 24.08-46.05 55.11-49.76 87.37a12 12 0 0 0 20.68 9.58c11-11.71 50.14-48.74 107.24-52V192a8 8 0 0 0 13.66 5.65l80-80a8 8 0 0 0 0-11.3ZM160 172.69V144a8 8 0 0 0-8-8c-28.08 0-55.43 7.33-81.29 21.8a196.17 196.17 0 0 0-36.57 26.52c5.8-23.84 20.42-46.51 42.05-64.86C99.41 99.77 127.75 88 152 88a8 8 0 0 0 8-8V51.32L220.69 112Z" />
    </svg>
  );
}

function IconUsers({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M117.25 157.92a60 60 0 1 0-66.5 0 95.83 95.83 0 0 0-47.22 37.71 8 8 0 1 0 13.4 8.74 80 80 0 0 1 134.14 0 8 8 0 0 0 13.4-8.74 95.83 95.83 0 0 0-47.22-37.71ZM40 108a44 44 0 1 1 44 44 44.05 44.05 0 0 1-44-44Zm210.14 98.7a8 8 0 0 1-11.07-2.33A79.83 79.83 0 0 0 172 168a8 8 0 0 1 0-16 44 44 0 1 0-16.34-84.87 8 8 0 1 1-5.94-14.85 60 60 0 0 1 55.53 105.64 95.83 95.83 0 0 1 47.22 37.71 8 8 0 0 1-2.33 11.07Z" />
    </svg>
  );
}

function IconExternalLink({
  className,
  ...props
}: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M224 104a8 8 0 0 1-16 0V59.32l-66.33 66.34a8 8 0 0 1-11.32-11.32L196.68 48H152a8 8 0 0 1 0-16h64a8 8 0 0 1 8 8Zm-40 24a8 8 0 0 0-8 8v72H48V80h72a8 8 0 0 0 0-16H48a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-72a8 8 0 0 0-8-8Z" />
    </svg>
  );
}

function IconChevronUpDown({
  className,
  ...props
}: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn("h-4 w-4", className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M181.66 170.34a8 8 0 0 1 0 11.32l-48 48a8 8 0 0 1-11.32 0l-48-48a8 8 0 0 1 11.32-11.32L128 212.69l42.34-42.35a8 8 0 0 1 11.32 0Zm-96-84.68L128 43.31l42.34 42.35a8 8 0 0 0 11.32-11.32l-48-48a8 8 0 0 0-11.32 0l-48 48a8 8 0 0 0 11.32 11.32Z" />
    </svg>
  );
}

/**
 * Renders an icon of a chevron pointing right by default.
 *
 * @param {React.ComponentProps<"svg">} props - The component props.
 * @param {string} props.className - The class name for the icon.
 */
function IconChevron({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("h-4 w-4", className)}
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M6.52459 16.2879C6.8907 16.654 7.4843 16.654 7.85041 16.2879L13.4754 10.6629C13.8415 10.2968 13.8415 9.7032 13.4754 9.33709L7.85041 3.71209C7.4843 3.34597 6.8907 3.34597 6.52459 3.71209C6.15847 4.0782 6.15847 4.6718 6.52459 5.03791L11.4867 10L6.52459 14.9621C6.15847 15.3282 6.15847 15.9218 6.52459 16.2879Z"
        fill="currentColor"
      />
    </svg>
  );
}

function IconSplashLines({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      viewBox="0 0 57 790"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      stroke="currentColor"
      className={cn("h-[790px] w-[57px]", className)}
      {...props}
    >
      <g opacity="0.9">
        <line x1="0.5" y1="265" x2="0.500002" y2="245" />
        <line x1="0.5" y1="239" x2="0.500001" y2="233" />
        <line x1="0.5" y1="229" x2="0.500001" y2="223" />
        <line x1="0.5" y1="219" x2="0.500001" y2="213" />
        <line x1="0.5" y1="209" x2="0.500001" y2="203" />
        <line x1="0.5" y1="199" x2="0.500001" y2="193" />
        <line x1="0.5" y1="189" x2="0.500001" y2="178" />
        <line x1="0.5" y1="176" x2="0.500001" y2="165" />
        <line x1="0.5" y1="163" x2="0.500001" y2="152" />
        <line x1="0.5" y1="150" x2="0.500001" y2="139" />
        <line x1="0.5" y1="137" x2="0.500004" y2="95" />
        <line x1="0.5" y1="440" x2="0.500002" y2="420" />
        <line x1="0.5" y1="414" x2="0.500001" y2="408" />
        <line x1="0.5" y1="404" x2="0.500001" y2="398" />
        <line x1="0.5" y1="394" x2="0.500001" y2="388" />
        <line x1="0.5" y1="384" x2="0.500001" y2="378" />
        <line x1="0.5" y1="374" x2="0.500001" y2="368" />
        <line x1="0.5" y1="364" x2="0.500001" y2="353" />
        <line x1="0.5" y1="351" x2="0.500001" y2="340" />
        <line x1="0.5" y1="338" x2="0.500001" y2="327" />
        <line x1="0.5" y1="325" x2="0.500001" y2="314" />
        <line x1="0.5" y1="312" x2="0.500004" y2="270" />
        <line x1="0.5" y1="615" x2="0.500002" y2="595" />
        <line x1="0.5" y1="589" x2="0.500001" y2="583" />
        <line x1="0.5" y1="579" x2="0.500001" y2="573" />
        <line x1="0.5" y1="569" x2="0.500001" y2="563" />
        <line x1="0.5" y1="559" x2="0.500001" y2="553" />
        <line x1="0.5" y1="549" x2="0.500001" y2="543" />
        <line x1="0.5" y1="539" x2="0.500001" y2="528" />
        <line x1="0.5" y1="526" x2="0.500001" y2="515" />
        <line x1="0.5" y1="513" x2="0.500001" y2="502" />
        <line x1="0.5" y1="500" x2="0.500001" y2="489" />
        <line x1="0.5" y1="487" x2="0.500004" y2="445" />
        <line
          y1="-0.5"
          x2="20"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 620)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 646)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 656)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 666)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 676)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 686)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 696)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 709)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 722)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 735)"
        />
        <line
          y1="-0.5"
          x2="42"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 1 748)"
        />
      </g>
      <g opacity="0.9">
        <line x1="48.5" y1="217" x2="48.5" y2="197" />
        <line x1="48.5" y1="191" x2="48.5" y2="185" />
        <line x1="48.5" y1="181" x2="48.5" y2="175" />
        <line x1="48.5" y1="171" x2="48.5" y2="165" />
        <line x1="48.5" y1="161" x2="48.5" y2="155" />
        <line x1="48.5" y1="151" x2="48.5" y2="145" />
        <line x1="48.5" y1="141" x2="48.5" y2="130" />
        <line x1="48.5" y1="128" x2="48.5" y2="117" />
        <line x1="48.5" y1="115" x2="48.5" y2="104" />
        <line x1="48.5" y1="102" x2="48.5" y2="91" />
        <line x1="48.5" y1="89" x2="48.5" y2="47" />
        <line x1="48.5" y1="392" x2="48.5" y2="372" />
        <line x1="48.5" y1="366" x2="48.5" y2="360" />
        <line x1="48.5" y1="356" x2="48.5" y2="350" />
        <line x1="48.5" y1="346" x2="48.5" y2="340" />
        <line x1="48.5" y1="336" x2="48.5" y2="330" />
        <line x1="48.5" y1="326" x2="48.5" y2="320" />
        <line x1="48.5" y1="316" x2="48.5" y2="305" />
        <line x1="48.5" y1="303" x2="48.5" y2="292" />
        <line x1="48.5" y1="290" x2="48.5" y2="279" />
        <line x1="48.5" y1="277" x2="48.5" y2="266" />
        <line x1="48.5" y1="264" x2="48.5" y2="222" />
        <line x1="48.5" y1="567" x2="48.5" y2="547" />
        <line x1="48.5" y1="541" x2="48.5" y2="535" />
        <line x1="48.5" y1="531" x2="48.5" y2="525" />
        <line x1="48.5" y1="521" x2="48.5" y2="515" />
        <line x1="48.5" y1="511" x2="48.5" y2="505" />
        <line x1="48.5" y1="501" x2="48.5" y2="495" />
        <line x1="48.5" y1="491" x2="48.5" y2="480" />
        <line x1="48.5" y1="478" x2="48.5" y2="467" />
        <line x1="48.5" y1="465" x2="48.5" y2="454" />
        <line x1="48.5" y1="452" x2="48.5" y2="441" />
        <line x1="48.5" y1="439" x2="48.5" y2="397" />
        <line
          y1="-0.5"
          x2="20"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 572)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 598)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 608)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 618)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 628)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 638)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 648)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 661)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 674)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 687)"
        />
        <line
          y1="-0.5"
          x2="42"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 49 700)"
        />
      </g>
      <g opacity="0.9">
        <line x1="56.5" y1="153" x2="56.5" y2="133" />
        <line x1="56.5" y1="127" x2="56.5" y2="121" />
        <line x1="56.5" y1="117" x2="56.5" y2="111" />
        <line x1="56.5" y1="107" x2="56.5" y2="101" />
        <line x1="56.5" y1="97" x2="56.5" y2="91" />
        <line x1="56.5" y1="87" x2="56.5" y2="81" />
        <line x1="56.5" y1="77" x2="56.5" y2="66" />
        <line x1="56.5" y1="64" x2="56.5" y2="53" />
        <line x1="56.5" y1="51" x2="56.5" y2="40" />
        <line x1="56.5" y1="38" x2="56.5" y2="27" />
        <line x1="56.5" y1="25" x2="56.5" y2="-17" />
        <line x1="56.5" y1="328" x2="56.5" y2="308" />
        <line x1="56.5" y1="302" x2="56.5" y2="296" />
        <line x1="56.5" y1="292" x2="56.5" y2="286" />
        <line x1="56.5" y1="282" x2="56.5" y2="276" />
        <line x1="56.5" y1="272" x2="56.5" y2="266" />
        <line x1="56.5" y1="262" x2="56.5" y2="256" />
        <line x1="56.5" y1="252" x2="56.5" y2="241" />
        <line x1="56.5" y1="239" x2="56.5" y2="228" />
        <line x1="56.5" y1="226" x2="56.5" y2="215" />
        <line x1="56.5" y1="213" x2="56.5" y2="202" />
        <line x1="56.5" y1="200" x2="56.5" y2="158" />
        <line x1="56.5" y1="503" x2="56.5" y2="483" />
        <line x1="56.5" y1="477" x2="56.5" y2="471" />
        <line x1="56.5" y1="467" x2="56.5" y2="461" />
        <line x1="56.5" y1="457" x2="56.5" y2="451" />
        <line x1="56.5" y1="447" x2="56.5" y2="441" />
        <line x1="56.5" y1="437" x2="56.5" y2="431" />
        <line x1="56.5" y1="427" x2="56.5" y2="416" />
        <line x1="56.5" y1="414" x2="56.5" y2="403" />
        <line x1="56.5" y1="401" x2="56.5" y2="390" />
        <line x1="56.5" y1="388" x2="56.5" y2="377" />
        <line x1="56.5" y1="375" x2="56.5" y2="333" />
        <line
          y1="-0.5"
          x2="20"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 508)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 534)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 544)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 554)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 564)"
        />
        <line
          y1="-0.5"
          x2="6"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 574)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 584)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 597)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 610)"
        />
        <line
          y1="-0.5"
          x2="11"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 623)"
        />
        <line
          y1="-0.5"
          x2="42"
          y2="-0.5"
          transform="matrix(8.74228e-08 1 1 -8.74228e-08 57 636)"
        />
      </g>
    </svg>
  );
}

function ReactLogo({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      viewBox="0 0 41 46"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("", className)}
      {...props}
    >
      <g clipPath="url(#clip0_634_54398)">
        <path d="M40.5 22.7937C40.5 20.1439 37.1816 17.6327 32.094 16.0754C33.268 10.8899 32.7462 6.76433 30.447 5.4435C29.917 5.13367 29.2974 4.98691 28.6207 4.98691V6.80509C28.9957 6.80509 29.2974 6.87847 29.5501 7.01708C30.659 7.65304 31.14 10.0746 30.765 13.1891C30.6753 13.9555 30.5285 14.7627 30.3492 15.5862C28.7511 15.1948 27.0063 14.8931 25.1718 14.6975C24.0711 13.1891 22.9297 11.8194 21.7801 10.6208C24.438 8.15039 26.9329 6.79694 28.6288 6.79694V4.97876C26.3867 4.97876 23.4515 6.5768 20.4837 9.34892C17.5159 6.59311 14.5807 5.01137 12.3386 5.01137V6.82955C14.0263 6.82955 16.5294 8.17485 19.1873 10.629C18.0459 11.8275 16.9044 13.1891 15.82 14.6975C13.9774 14.8931 12.2326 15.1948 10.6345 15.5943C10.447 14.779 10.3084 13.9881 10.2106 13.2299C9.82735 10.1153 10.3002 7.6938 11.4009 7.04969C11.6455 6.90293 11.9635 6.83771 12.3386 6.83771V5.01953C11.6537 5.01953 11.034 5.16629 10.4959 5.47611C8.20485 6.79694 7.69119 10.9143 8.87342 16.0835C3.80208 17.649 0.5 20.152 0.5 22.7937C0.5 25.4435 3.81838 27.9547 8.90603 29.512C7.73196 34.6975 8.25377 38.823 10.553 40.1439C11.083 40.4537 11.7026 40.6004 12.3875 40.6004C14.6296 40.6004 17.5648 39.0024 20.5326 36.2303C23.5004 38.9861 26.4356 40.5678 28.6777 40.5678C29.3626 40.5678 29.9823 40.4211 30.5204 40.1112C32.8115 38.7904 33.3251 34.673 32.1429 29.5038C37.1979 27.9466 40.5 25.4353 40.5 22.7937ZM29.8844 17.3554C29.5828 18.4072 29.2077 19.4916 28.7837 20.576C28.4494 19.9237 28.0989 19.2715 27.7157 18.6192C27.3406 17.9669 26.9411 17.331 26.5416 16.7113C27.6994 16.8825 28.8163 17.0945 29.8844 17.3554ZM26.1502 26.0387C25.5143 27.1394 24.862 28.183 24.1853 29.1532C22.9704 29.2592 21.7393 29.3163 20.5 29.3163C19.2689 29.3163 18.0377 29.2592 16.831 29.1614C16.1543 28.1912 15.4939 27.1557 14.8579 26.0631C14.2383 24.9951 13.6757 23.9107 13.162 22.8181C13.6676 21.7256 14.2383 20.6331 14.8498 19.565C15.4857 18.4643 16.138 17.4207 16.8147 16.4504C18.0296 16.3444 19.2607 16.2874 20.5 16.2874C21.7311 16.2874 22.9623 16.3444 24.169 16.4423C24.8457 17.4125 25.5061 18.448 26.1421 19.5405C26.7617 20.6086 27.3243 21.693 27.838 22.7855C27.3243 23.8781 26.7617 24.9706 26.1502 26.0387ZM28.7837 24.9788C29.224 26.0713 29.5991 27.1638 29.9089 28.2238C28.8408 28.4847 27.7157 28.7048 26.5497 28.876C26.9492 28.2482 27.3488 27.6041 27.7238 26.9437C28.0989 26.2914 28.4494 25.631 28.7837 24.9788ZM20.5163 33.6783C19.7581 32.8956 18.9998 32.0232 18.2497 31.0693C18.9835 31.1019 19.7336 31.1263 20.4918 31.1263C21.2583 31.1263 22.0165 31.11 22.7585 31.0693C22.0247 32.0232 21.2664 32.8956 20.5163 33.6783ZM14.4503 28.876C13.2925 28.7048 12.1755 28.4928 11.1074 28.2319C11.4091 27.1801 11.7841 26.0958 12.2081 25.0114C12.5424 25.6636 12.893 26.3159 13.2762 26.9682C13.6594 27.6204 14.0508 28.2564 14.4503 28.876ZM20.4755 11.909C21.2338 12.6918 21.9921 13.5642 22.7422 14.5181C22.0084 14.4855 21.2583 14.461 20.5 14.461C19.7336 14.461 18.9753 14.4773 18.2334 14.5181C18.9672 13.5642 19.7254 12.6918 20.4755 11.909ZM14.4421 16.7113C14.0426 17.3391 13.6431 17.9832 13.268 18.6437C12.893 19.2959 12.5424 19.9482 12.2081 20.6004C11.7678 19.5079 11.3928 18.4154 11.083 17.3554C12.151 17.1027 13.2762 16.8825 14.4421 16.7113ZM7.06339 26.9192C4.17713 25.6881 2.31003 24.0737 2.31003 22.7937C2.31003 21.5136 4.17713 19.8911 7.06339 18.6681C7.76458 18.3664 8.53098 18.0974 9.32185 17.8446C9.78659 19.4427 10.3981 21.1059 11.1563 22.81C10.4062 24.5059 9.8029 26.161 9.34631 27.7509C8.53914 27.4981 7.77273 27.2209 7.06339 26.9192ZM11.4499 38.5703C10.341 37.9343 9.85997 35.5128 10.235 32.3982C10.3247 31.6318 10.4715 30.8247 10.6508 30.0012C12.2489 30.3925 13.9937 30.6942 15.8282 30.8899C16.9289 32.3982 18.0703 33.768 19.2199 34.9665C16.562 37.437 14.0671 38.7904 12.3712 38.7904C12.0043 38.7823 11.6945 38.7089 11.4499 38.5703ZM30.7894 32.3575C31.1726 35.472 30.6998 37.8936 29.5991 38.5377C29.3545 38.6844 29.0365 38.7496 28.6614 38.7496C26.9737 38.7496 24.4707 37.4044 21.8127 34.9502C22.9541 33.7517 24.0956 32.3901 25.18 30.8817C27.0226 30.6861 28.7674 30.3844 30.3655 29.9849C30.553 30.8084 30.6998 31.5992 30.7894 32.3575ZM33.9285 26.9192C33.2273 27.2209 32.4609 27.49 31.67 27.7427C31.2053 26.1447 30.5938 24.4814 29.8355 22.7774C30.5856 21.0815 31.189 19.4264 31.6455 17.8365C32.4527 18.0892 33.2191 18.3664 33.9366 18.6681C36.8229 19.8993 38.69 21.5136 38.69 22.7937C38.6818 24.0737 36.8147 25.6962 33.9285 26.9192Z" />
        <path d="M20.4917 26.5195C22.5495 26.5195 24.2177 24.8513 24.2177 22.7934C24.2177 20.7356 22.5495 19.0674 20.4917 19.0674C18.4338 19.0674 16.7656 20.7356 16.7656 22.7934C16.7656 24.8513 18.4338 26.5195 20.4917 26.5195Z" />
      </g>
      <defs>
        <clipPath id="clip0_634_54398">
          <rect
            width="40"
            height="45.5788"
            fill="white"
            transform="translate(0.5)"
          />
        </clipPath>
      </defs>
    </svg>
  );
}

function NextJsLogo({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      viewBox="0 0 40 40"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("", className)}
      {...props}
    >
      <path d="M18.6901 0.0107641C18.6041 0.0185831 18.3304 0.0459496 18.0841 0.0654971C12.4027 0.577641 7.08113 3.64268 3.71065 8.35362C1.83382 10.973 0.633431 13.9442 0.179863 17.0913C0.0195503 18.1899 0 18.5144 0 20.0039C0 21.4934 0.0195503 21.8179 0.179863 22.9165C1.26686 30.4266 6.61193 36.7365 13.8612 39.0744C15.1593 39.4927 16.5279 39.7781 18.0841 39.9502C18.6901 40.0166 21.3099 40.0166 21.9159 39.9502C24.6021 39.653 26.8778 38.9884 29.1222 37.8429C29.4663 37.667 29.5327 37.6201 29.4858 37.581C29.4545 37.5575 27.9883 35.5911 26.2287 33.2141L23.0303 28.8941L19.0225 22.9634C16.8172 19.7029 15.0029 17.0366 14.9873 17.0366C14.9717 17.0327 14.956 19.6677 14.9482 22.8852C14.9365 28.5188 14.9326 28.7455 14.8622 28.8785C14.7605 29.07 14.6823 29.1482 14.5181 29.2342C14.393 29.2968 14.2835 29.3085 13.6931 29.3085H13.0166L12.8368 29.1951C12.7195 29.1209 12.6334 29.0231 12.5748 28.9097L12.4927 28.7338L12.5005 20.8953L12.5122 13.0528L12.6334 12.9004C12.696 12.8183 12.8289 12.7127 12.9228 12.6619C13.0831 12.5837 13.1456 12.5759 13.8221 12.5759C14.6197 12.5759 14.7527 12.6072 14.9599 12.8339C15.0186 12.8965 17.1887 16.1648 19.7849 20.1017C22.3812 24.0385 25.9316 29.4141 27.6755 32.053L30.8426 36.8499L31.0029 36.7444C32.4223 35.8217 33.9238 34.5081 35.1124 33.1398C37.6422 30.2351 39.2727 26.6931 39.8201 22.9165C39.9804 21.8179 40 21.4934 40 20.0039C40 18.5144 39.9804 18.1899 39.8201 17.0913C38.7331 9.58121 33.3881 3.27128 26.1388 0.933405C24.8602 0.518998 23.4995 0.233605 21.9746 0.0615876C21.5992 0.0224926 19.0147 -0.0205118 18.6901 0.0107641ZM26.8778 12.1067C27.0655 12.2006 27.218 12.3804 27.2727 12.5681C27.304 12.6697 27.3118 14.8434 27.304 19.742L27.2923 26.7712L26.0528 24.8712L24.8094 22.9712V17.8615C24.8094 14.558 24.825 12.701 24.8485 12.6111C24.911 12.3921 25.0479 12.2201 25.2356 12.1185C25.3959 12.0364 25.4545 12.0285 26.0684 12.0285C26.6471 12.0285 26.7488 12.0364 26.8778 12.1067Z" />
    </svg>
  );
}

function TailwindLogo({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      viewBox="0 0 52 31"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("", className)}
      {...props}
    >
      <path d="M26.017 0.289307C19.212 0.289307 14.96 3.67131 13.258 10.4353C15.81 7.05331 18.787 5.78531 22.189 6.63031C24.13 7.11231 25.518 8.51231 27.053 10.0623C29.555 12.5863 32.451 15.5073 38.775 15.5073C45.579 15.5073 49.832 12.1253 51.533 5.36231C48.982 8.74431 46.005 10.0123 42.603 9.16631C40.661 8.68431 39.273 7.28431 37.738 5.73531C35.236 3.20931 32.341 0.289307 26.017 0.289307ZM13.258 15.5073C6.454 15.5073 2.201 18.8893 0.5 25.6533C3.052 22.2713 6.029 21.0033 9.43 21.8483C11.372 22.3303 12.76 23.7303 14.295 25.2803C16.797 27.8043 19.692 30.7253 26.017 30.7253C32.821 30.7253 37.074 27.3443 38.775 20.5803C36.223 23.9623 33.246 25.2303 29.844 24.3853C27.903 23.9023 26.515 22.5023 24.98 20.9533C22.478 18.4293 19.582 15.5073 13.258 15.5073Z" />
    </svg>
  );
}

function OpenAiLogo({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      viewBox="0 0 41 40"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("", className)}
      {...props}
    >
      <path d="M37.6324 16.1605C38.5399 13.4367 38.2274 10.453 36.7761 7.9755C34.5936 4.1755 30.2061 2.2205 25.9211 3.1405C24.0149 0.992998 21.2761 -0.228252 18.4049 -0.210752C14.0249 -0.220752 10.1386 2.59925 8.79114 6.76675C5.97739 7.343 3.54864 9.10425 2.12739 11.6005C-0.0713614 15.3905 0.429888 20.168 3.36739 23.418C2.45989 26.1417 2.77239 29.1255 4.22364 31.603C6.40614 35.403 10.7936 37.358 15.0786 36.438C16.9836 38.5855 19.7236 39.8067 22.5949 39.788C26.9774 39.7992 30.8649 36.9767 32.2124 32.8055C35.0261 32.2293 37.4549 30.468 38.8761 27.9717C41.0724 24.1817 40.5699 19.408 37.6336 16.158L37.6324 16.1605ZM22.5974 37.1742C20.8436 37.1767 19.1449 36.563 17.7986 35.4393C17.8599 35.4067 17.9661 35.348 18.0349 35.3055L25.9999 30.7055C26.4074 30.4742 26.6574 30.0405 26.6549 29.5717V18.343L30.0211 20.2867C30.0574 20.3042 30.0811 20.3392 30.0861 20.3792V29.678C30.0811 33.813 26.7324 37.1655 22.5974 37.1742ZM6.49239 30.2955C5.61364 28.778 5.29739 26.9992 5.59864 25.273C5.65739 25.308 5.76114 25.3717 5.83489 25.4142L13.7999 30.0142C14.2036 30.2505 14.7036 30.2505 15.1086 30.0142L24.8324 24.3992V28.2867C24.8349 28.3267 24.8161 28.3655 24.7849 28.3905L16.7336 33.0392C13.1474 35.1042 8.56739 33.8767 6.49364 30.2955H6.49239ZM4.39614 12.9092C5.27114 11.3892 6.65239 10.2267 8.29739 9.623C8.29739 9.69175 8.29364 9.813 8.29364 9.898V19.0992C8.29114 19.5667 8.54114 20.0005 8.94739 20.2317L18.6711 25.8455L15.3049 27.7892C15.2711 27.8117 15.2286 27.8155 15.1911 27.7992L7.13864 23.1467C3.55989 21.0742 2.33239 16.4955 4.39489 12.9105L4.39614 12.9092ZM32.0536 19.3455L22.3299 13.7305L25.6961 11.788C25.7299 11.7655 25.7724 11.7617 25.8099 11.778L33.8624 16.4267C37.4474 18.498 38.6761 23.0842 36.6049 26.6692C35.7286 28.1867 34.3486 29.3492 32.7049 29.9542V20.478C32.7086 20.0105 32.4599 19.578 32.0549 19.3455H32.0536ZM35.4036 14.303C35.3449 14.2667 35.2411 14.2042 35.1674 14.1617L27.2024 9.56175C26.7986 9.3255 26.2986 9.3255 25.8936 9.56175L16.1699 15.1767V11.2892C16.1674 11.2492 16.1861 11.2105 16.2174 11.1855L24.2686 6.5405C27.8549 4.47175 32.4399 5.703 34.5074 9.2905C35.3811 10.8055 35.6974 12.5792 35.4011 14.303H35.4036ZM14.3399 21.2317L10.9724 19.288C10.9361 19.2705 10.9124 19.2355 10.9074 19.1955V9.89675C10.9099 5.75675 14.2686 2.40175 18.4086 2.40425C20.1599 2.40425 21.8549 3.01925 23.2011 4.13925C23.1399 4.17175 23.0349 4.2305 22.9649 4.273L14.9999 8.873C14.5924 9.10425 14.3424 9.53675 14.3449 10.0055L14.3399 21.2292V21.2317ZM16.1686 17.2892L20.4999 14.788L24.8311 17.288V22.2892L20.4999 24.7892L16.1686 22.2892V17.2892Z" />
    </svg>
  );
}

function TypeScriptLogo({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      viewBox="0 0 40 42"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("", className)}
      {...props}
    >
      <g clipPath="url(#clip0_13_1671)">
        <path
          d="M36.0938 0H3.90625C1.74889 0 0 1.83633 0 4.10156V37.8984C0 40.1637 1.74889 42 3.90625 42H36.0938C38.2511 42 40 40.1637 40 37.8984V4.10156C40 1.83633 38.2511 0 36.0938 0Z"
          fill="currentColor"
        />
        <path
          d="M36.0938 0H3.90625C1.74889 0 0 1.83633 0 4.10156V37.8984C0 40.1637 1.74889 42 3.90625 42H36.0938C38.2511 42 40 40.1637 40 37.8984V4.10156C40 1.83633 38.2511 0 36.0938 0Z"
          fill="currentColor"
        />
        <path
          d="M24.7609 33.4215V37.5281C25.3966 37.8703 26.1486 38.1269 27.0167 38.298C27.8848 38.4691 28.7998 38.5547 29.7616 38.5547C30.6991 38.5547 31.5895 38.4606 32.4332 38.2723C33.2769 38.0842 34.0166 37.774 34.6524 37.3419C35.2882 36.91 35.7916 36.3453 36.1624 35.648C36.5333 34.9507 36.7188 34.0888 36.7188 33.0622C36.7188 32.3179 36.6128 31.6655 36.4009 31.1052C36.1889 30.5448 35.8833 30.0465 35.4838 29.6102C35.0845 29.1738 34.6055 28.7824 34.0472 28.4359C33.4888 28.0894 32.8591 27.7622 32.1581 27.4542C31.6446 27.2317 31.1841 27.0158 30.7765 26.8062C30.3689 26.5965 30.0225 26.3826 29.7372 26.1645C29.4519 25.9463 29.2318 25.7153 29.077 25.4715C28.9221 25.2276 28.8446 24.9518 28.8446 24.6437C28.8446 24.3615 28.9139 24.1069 29.0525 23.8802C29.1911 23.6535 29.3867 23.4589 29.6394 23.2963C29.8921 23.1338 30.2018 23.0076 30.5686 22.9177C30.9355 22.8279 31.343 22.783 31.7913 22.783C32.1173 22.783 32.4617 22.8087 32.8245 22.86C33.1872 22.9113 33.552 22.9905 33.9188 23.0974C34.2856 23.2043 34.6422 23.3391 34.9887 23.5016C35.3351 23.6642 35.655 23.8524 35.9484 24.0663V20.2292C35.3534 19.9897 34.7034 19.8122 33.9983 19.6967C33.2932 19.5812 32.4841 19.5234 31.5712 19.5234C30.642 19.5234 29.7616 19.6283 28.9302 19.8379C28.0988 20.0475 27.3673 20.3747 26.7355 20.8195C26.1037 21.2645 25.6045 21.8312 25.2377 22.52C24.8709 23.2086 24.6875 24.032 24.6875 24.9902C24.6875 26.2137 25.0237 27.2574 25.6962 28.1215C26.3687 28.9856 27.3896 29.7171 28.7591 30.316C29.297 30.547 29.7984 30.7736 30.263 30.9961C30.7276 31.2186 31.1291 31.4496 31.4673 31.6891C31.8055 31.9286 32.0725 32.1896 32.2682 32.4719C32.4638 32.7542 32.5616 33.075 32.5616 33.4344C32.5616 33.6996 32.5005 33.9455 32.3782 34.1722C32.2559 34.399 32.0705 34.5957 31.8219 34.7625C31.5733 34.9294 31.2635 35.0598 30.8927 35.1539C30.5217 35.2481 30.0877 35.2951 29.5905 35.2951C28.7427 35.2951 27.9032 35.139 27.0717 34.8267C26.2403 34.5145 25.47 34.0461 24.7609 33.4215ZM18.1859 23.3036H23.2031V19.9336H9.21875V23.3036H14.2114V38.3086H18.1859V23.3036Z"
          className="fill-background"
        />
      </g>
      <defs>
        <clipPath id="clip0_13_1671">
          <rect width="40" height="42" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}

export {
  IconEdit,
  IconNextChat,
  IconOpenAI,
  IconVercel,
  IconGitHub,
  IconSeparator,
  IconArrowDown,
  IconArrowRight,
  IconUser,
  IconPlus,
  IconArrowElbow,
  IconSpinner,
  IconMessage,
  IconTrash,
  IconRefresh,
  IconStop,
  IconSidebar,
  IconMoon,
  IconSun,
  IconCopy,
  IconCheck,
  IconDownload,
  IconClose,
  IconShare,
  IconUsers,
  IconExternalLink,
  IconChevronUpDown,
  IconLoading,
  IconSplashLines,
  IconChevron,
  IconArrowDiagonal,
  ReactLogo,
  NextJsLogo,
  TailwindLogo,
  OpenAiLogo,
  TypeScriptLogo,
};
